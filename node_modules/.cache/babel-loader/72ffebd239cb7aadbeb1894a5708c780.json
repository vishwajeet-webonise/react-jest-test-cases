{"ast":null,"code":"import axios from \"axios\";\nexport const addTodo = todo => ({\n  type: \"ADD_TODO\",\n  payload: todo\n});\nexport const saveTodoOnServer = desc => {\n  return dispatch => {\n    return axios({\n      method: \"post\",\n      url: \"http://localhost:5000/todos\",\n      data: {\n        desc: this.state.description\n      }\n    }).then(response => {\n      let todoObject = response.data;\n      dispatch(addTodo(todoObject));\n    }).catch(e => console.log(\"error\", e));\n  };\n};\nexport const deleteTodo = todo => ({\n  type: \"DELETE_TODO\",\n  payload: todo\n});\nexport const deleteTodoFromServer = id => {\n  return dispatch => {\n    return axios({\n      method: \"post\",\n      url: \"http://localhost:5000/tododelete\",\n      data: {\n        id: todo.id\n      }\n    }).then(response => {\n      let todo = response.data;\n      dispatch(deleteTodo(todo));\n    }).catch(e => console.log(\"error\", e));\n  };\n};\nexport const updateTodo = todo => ({\n  type: \"UPDATE_TODO\",\n  payload: todo\n});\nexport const updateTodoOnServer = (id, desc) => {\n  return dispatch => {\n    return axios({\n      method: \"post\",\n      url: \"http://localhost:5000/todoupdate\",\n      data: {\n        id: this.state.updateItem.id,\n        desc: desc\n      }\n    }).then(response => {\n      let todo = response.data;\n      dispatch(updateTodo(todo));\n    }).catch(e => console.log(\"error\", e));\n  };\n};\nexport const addLoadedTodo = todos => ({\n  type: \"LOADED_TODO\",\n  payload: todos\n});\nexport const loadTodoFromServer = () => {\n  return dispatch => {\n    return axios({\n      method: \"get\",\n      url: \"http://localhost:5000/todos\"\n    }).then(response => {\n      let todo = response.data;\n      dispatch(addLoadedTodo(todo));\n    }).catch(e => console.log(\"error\", e));\n  };\n};","map":{"version":3,"sources":["/home/webonise/Desktop/react-assignment-store/src/store/actions/todoAction.js"],"names":["axios","addTodo","todo","type","payload","saveTodoOnServer","desc","dispatch","method","url","data","state","description","then","response","todoObject","catch","e","console","log","deleteTodo","deleteTodoFromServer","id","updateTodo","updateTodoOnServer","updateItem","addLoadedTodo","todos","loadTodoFromServer"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const addTodo = todo => ({\r\n  type: \"ADD_TODO\",\r\n  payload: todo\r\n});\r\n\r\nexport const saveTodoOnServer = desc => {\r\n  return dispatch => {\r\n    return axios({\r\n      method: \"post\",\r\n      url: \"http://localhost:5000/todos\",\r\n      data: { desc: this.state.description }\r\n    })\r\n      .then(response => {\r\n        let todoObject = response.data;\r\n        dispatch(addTodo(todoObject));\r\n      })\r\n      .catch(e => console.log(\"error\", e));\r\n  };\r\n};\r\n\r\nexport const deleteTodo = todo => ({\r\n  type: \"DELETE_TODO\",\r\n  payload: todo\r\n});\r\n\r\nexport const deleteTodoFromServer = id => {\r\n  return dispatch => {\r\n    return axios({\r\n      method: \"post\",\r\n      url: \"http://localhost:5000/tododelete\",\r\n      data: { id: todo.id }\r\n    })\r\n      .then(response => {\r\n        let todo = response.data;\r\n        dispatch(deleteTodo(todo));\r\n      })\r\n      .catch(e => console.log(\"error\", e));\r\n  };\r\n};\r\n\r\nexport const updateTodo = todo => ({\r\n  type: \"UPDATE_TODO\",\r\n  payload: todo\r\n});\r\n\r\nexport const updateTodoOnServer = (id, desc) => {\r\n  return dispatch => {\r\n    return axios({\r\n      method: \"post\",\r\n      url: \"http://localhost:5000/todoupdate\",\r\n      data: { id: this.state.updateItem.id, desc: desc }\r\n    })\r\n      .then(response => {\r\n        let todo = response.data;\r\n        dispatch(updateTodo(todo));\r\n      })\r\n      .catch(e => console.log(\"error\", e));\r\n  };\r\n};\r\n\r\nexport const addLoadedTodo = todos => ({\r\n  type: \"LOADED_TODO\",\r\n  payload: todos\r\n});\r\n\r\nexport const loadTodoFromServer = () => {\r\n  return dispatch => {\r\n    return axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/todos\"\r\n    })\r\n      .then(response => {\r\n        let todo = response.data;\r\n        dispatch(addLoadedTodo(todo));\r\n      })\r\n      .catch(e => console.log(\"error\", e));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}